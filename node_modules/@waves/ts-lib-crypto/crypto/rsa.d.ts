import { RSADigestAlgorithm, TBytes, TRSAKeyPair } from './interface';
export declare const pemToBytes: (pem: string) => Uint8Array;
declare const pemTypeMap: {
    rsaPrivateNonEncrypted: string;
    rsaPublic: string;
};
export declare const bytesToPem: (bytes: Uint8Array, type: keyof typeof pemTypeMap) => string;
export declare const rsaKeyPairSync: (bits?: number | undefined, e?: number | undefined) => TRSAKeyPair;
export declare const rsaKeyPair: (bits?: number | undefined, e?: number | undefined) => Promise<TRSAKeyPair>;
export declare const rsaSign: (rsaPrivateKey: TBytes, message: TBytes, digest?: RSADigestAlgorithm) => TBytes;
export declare const rsaVerify: (rsaPublicKey: TBytes, message: TBytes, signature: TBytes, digest?: RSADigestAlgorithm) => boolean;
export {};
