import { TBinaryIn, TRawStringIn, TBytes, AESMode } from './interface';
export declare const aesEncrypt: (data: TBinaryIn, key: TBinaryIn, mode?: AESMode, iv?: string | Uint8Array | number[] | undefined) => TBytes;
export declare const aesDecrypt: (encryptedData: TBinaryIn, key: TBinaryIn, mode?: AESMode, iv?: string | Uint8Array | number[] | undefined) => TBytes;
export declare const messageEncrypt: (sharedKey: TBinaryIn, message: string) => TBytes;
export declare const messageDecrypt: (sharedKey: TBinaryIn, encryptedMessage: TBinaryIn) => string;
export declare const sharedKey: (privateKeyFrom: TBinaryIn, publicKeyTo: TBinaryIn, prefix: TRawStringIn) => TBytes;
